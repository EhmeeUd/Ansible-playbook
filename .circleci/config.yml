version: 2.1

orbs:
  # Choose either one of the orbs below
  aws-cli: circleci/aws-cli@2.0.3

commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

# Define a job to be invoked later in a workflow.
jobs:
  # Exercise - Rollback
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1

  # create_infrastructure: 
  #     docker:
  #       - image: amazon/aws-cli
  #     steps:
  #       - checkout
  #       - run:
  #           name: Create Cloudformation Stack
  #           command: |
  #             aws cloudformation deploy \
  #               --template-file template.yml \
  #               --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
  #               --region us-east-1

  # Exercise: Config and Deployment
  # configure_infrastructure: 
  #   docker:
  #     - image: python:3.10.5-alpine3.16
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
              # You can get this ID in the section where you registered the SSH Key
      #         fingerprints: ["78:92:60:db:42:43:b5:19:63:2d:05:08:f5:f3:5c:32"] 
      # - run:
      #     name: Install Ansible
      #     command: |
      #       apk add --update ansible
      # - run:
      #     name: Run Playbook and Configure server
      #     command: |
      #       ansible-playbook -i inventory.txt main-remote.yml

  # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test job
          # Fail the job intentionally to simulate an error.
          command:  return 1
      - destroy_environment 

  # Exercise: Smoke Testing
  # smoke_test:
  #   docker:
  #     - image: alpine:latest
  #   steps:
  #     - run: apk add --update curl
  #     - run:
  #         name: smoke test
  #         command: |
  #           URL="https://blog.udacity.com/"
  #           if curl -s --head ${URL} 
  #           then
  #             return 0
  #           else
  #             return 1
  #           fi
         
# Invoke jobs via workflows
workflows:
  build-workflow :
    jobs:
      - create_infrastructure
      #- configure_infrastructure
      - smoke_test
